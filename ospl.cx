#package /ospl

// Initialize bootstrap DDS entities
int16 ddsInit()

// Readonly variables that are automatically set by library
string uri: null
uint32 domainId: 0
string domainName: null
bool singleProcess: false

// Native DDS types
native/type DDS_Participant: "DDS_DomainParticipant"
native/type DDS_Publisher: "DDS_Publisher"
native/type DDS_Subscriber: "DDS_Subscriber"
native/type DDS_Topic: "DDS_Topic"
native/type DDS_Condition: "DDS_Condition"
native/type DDS_ReadCondition: "DDS_ReadCondition"
native/type DDS_GuardCondition: "DDS_GuardCondition"
native/type DDS_DataReader: "DDS_DataReader"
native/type DDS_DataWriter: "DDS_DataWriter"

// Native ospl types
native/type ospl_copyProgram: "ospl_copyProgram"

// Convert type to a metadescriptor.
string toMetaXml(struct type)

// Inject type from metadescriptor
int16 fromMetaXml(string xml, string type, string keys)

// Get keylist string from type
string getKeylist(lang/struct type)

// Type used to copy out data from DCPSTopic samples
class DCPSTopic::
  name: string, key
  type_name: string
  meta_data: string
  key_list: string

// Wait for topic
DCPSTopic waitForTopic(string pattern)

// Register type for a topic using typedescriptors from DCPSTopic
DCPSTopic registerTypeForTopic(string topicName)

// Create a new topic for corto type
DDS_Topic registerTopic(string topicName, lang/type type)

// Mount data from topic
class Connector : mount, hidden ::
  alias mount: mount/mount
  partition: string

  class Connection : core/mount, hidden ::
    int16 construct()
    void destruct()
    void onNotify(eventMask event, core/result object)

    rootConnector: ospl/Connector
    topicName: string
    topic: tablescope, readonly

    quit: bool, private|local
    thread: word, private|local
    ddsSub: DDS_Subscriber, private|local
    ddsPub: DDS_Publisher, private|local
    ddsTopic: DDS_Topic, private|local
    ddsReader: DDS_DataReader, private|local
    ddsWriter: DDS_DataWriter, private|local
    program: ospl_copyProgram, private|local



  int16 construct()
  void destruct()
  resultIter onRequest(request request)
  void onNotify(eventMask event, core/result object)
  word onSubscribe(string parent, string expr, lang/word ctx)
  void onUnsubscribe(string parent, string expr, lang/word ctx)

