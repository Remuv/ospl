#package ospl/idl

class Declarator::
    identifier: string
    arraySizes: list{uint32}
    lang::type getType(lang::type t)

struct InheritanceSpec::
    base: lang::interface
    supports: list{lang::type}

class Parser::
    filename: string
    source: string
    line: int32, local|readonly
    column: int32, local|readonly
    errors: int32, readonly
    @scope: object, readonly

    int16 construct()
    int16 parse()
    package pushModule(string name)
    void popModule()
    struct declareStruct(string name)
    int16 defineStruct(struct s)
    class declareValueType(string name, InheritanceSpec inherits)
    int16 defineValueType(class v)
    int16 parseMember(lang::type type, list{Declarator} name, bool readonly)
    int16 parseMethod(lang::type returnType, string name, list{lang::parameter} parameters)
    enum parseEnum(string name, list{string} enumerators)
    type parseTypedef(type t, list{Declarator} declarators)
